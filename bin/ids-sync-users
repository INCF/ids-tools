#!/usr/bin/python
# -*- python -*-

import os
import sys

debug = 0

if __name__ == '__main__':

    lib_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), "../lib"))
    sys.path.insert(0, lib_dir)

    from ids.utils import *

    ids_groups = {}
    local_groups = {}


    # get list of groups and users from 'incf' zone
    print('Getting list of users from \'incf\' zone...')
    
    query = "select USER_GROUP_NAME, USER_NAME where USER_GROUP_NAME like 'ids-%'"

    output = run_iquest_query(query, format='%s:%s', zone='incf')
    if output == None:
        sys.exit(1)
        
    for line in output.splitlines():
        if line == 'Zone is incf': continue
        group, user = line.split(':')
        if not group == user:
            if group in ids_groups:
                ids_groups[group].append(user)
            else:
                ids_groups[group] = [ user, ]
        elif group not in ids_groups:
            ids_groups[group] = []  # empty group

    if debug:
        for group in ids_groups:
            print('IDS group %s:' % (group,))
            for user in ids_groups[group]:
                print('\t%s' % (user,))


    # populate the list of local groups and users
    print('Getting list of users from the local zone...')

    query = "select USER_GROUP_NAME, USER_NAME where USER_GROUP_NAME like 'ids-%'"

    output = run_iquest_query(query, format='%s:%s')
    if output == None:
        sys.exit(1)
    
    for line in output.splitlines():
        group, user = line.split(':')
        if not group == user:
            if group in local_groups:
                local_groups[group].append(user)
            else:
                local_groups[group] = [ user, ]
        elif group not in local_groups:
            local_groups[group] = []

    if debug:
        for group in local_groups:
            print('Local group %s:' % (group,))
            for user in local_groups[group]:
                print('\t%s' % (user,))


    # Removals

    # remove groups locally that don't exist in IDS
    print('Removing groups no longer defined in the \'incf\' zone...')
    for group in local_groups:
        if group not in ids_groups:
            if run_iadmin('rmgroup', [ group, ]):
                print('\terror removing group %s' % (group,))
            else:
                print('\tremoved group %s' % (group,))

    # remove users that don't exist in IDS's ids-user group
    print('Removing users that have been removed from \'ids-user\'...')
    if 'ids-user' in local_groups:
        for user in local_groups['ids-user']:
            if user not in ids_groups['ids-user']:
                zone_user = user + '#incf'
                if run_iadmin('rmuser', [ zone_user, ]):
                    print('\terror removing user %s' % (zone_user,))
                    print('\tThey might still own files in iRODS.')
                    # if run_iadmin('rfg', ['ids-user', zone_user]):
                    #     print('\terror removing %s from group ids-user' % (zone_user,))
                    # else:
                    #     print('\tremoved user %s from group ids-user' % (zone_user,))
                else:
                    print('\tremoved user %s' % (zone_user,))


    # Additions

    # add groups from IDS that don't exist locally
    print('Adding new \'incf\' zone groups...')
    for group in ids_groups:
        if group not in local_groups:
            if run_iadmin('mkgroup', [ group, ]):
                print('\terror adding new group %s' % (group,))
            else:
                print('\tadded new group %s' % (group,))
                local_groups[group] = []

    # add users from ids-user that don't exist locally
    print('Adding new users from \'ids-user\'...')
    for user in ids_groups['ids-user']:
        if user not in local_groups['ids-user']:
            zone_user = user + '#incf'
            if run_iadmin('mkuser', [ zone_user, 'rodsuser' ]):
                print('\terror adding new user %s' % (zone_user,))
            else:
                print('\tadded new user %s' % (zone_user,))
                if run_iadmin('atg', [ 'ids-user', zone_user ]):
                    print('\terror adding %s to \'ids-user\' group' % (zone_user,))
                else:
                    print('\tadded %s to group \'ids-user\'' % (zone_user,))



    # Synchronize group membership (except for ids-user which has
    # already been processed)
    print('Synchronizing group membership...')
    for group in ids_groups:
        if group == 'ids-user': continue

        # remove user from group
        for user in local_groups[group]:
            if user not in ids_groups[group]:
                zone_user = user + '#incf'
                if run_iadmin('rfg', [group, zone_user]):
                    print('\terror removing %s from group %s' % (zone_user, group))
                else:
                    print('\tremoved user %s from group %s' % (zone_user, group))
                    
        # add users to group
        for user in ids_groups[group]:
            if user not in local_groups[group]:
                zone_user = user + '#incf'
                if run_iadmin('atg', [ group, zone_user]):
                    print('\terror adding %s to group %s' % (zone_user, group))
                else:
                    print('\tadded user %s to group %s' % (zone_user, group))


    print('All done.')
    sys.exit(0)
